# automatically generated by the FlatBuffers compiler, do not modify

# namespace: 

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class SingleAgentEnvStateData(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = SingleAgentEnvStateData()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsSingleAgentEnvStateData(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # SingleAgentEnvStateData
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # SingleAgentEnvStateData
    def StateId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, o + self._tab.Pos)
        return 0

    # SingleAgentEnvStateData
    def IsGameOver(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # SingleAgentEnvStateData
    def Score(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float32Flags, o + self._tab.Pos)
        return 0.0

    # SingleAgentEnvStateData
    def AvailableActionsIds(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            a = self._tab.Vector(o)
            return self._tab.Get(flatbuffers.number_types.Uint64Flags, a + flatbuffers.number_types.UOffsetTFlags.py_type(j * 8))
        return 0

    # SingleAgentEnvStateData
    def AvailableActionsIdsAsNumpy(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.GetVectorAsNumpy(flatbuffers.number_types.Uint64Flags, o)
        return 0

    # SingleAgentEnvStateData
    def AvailableActionsIdsLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

    # SingleAgentEnvStateData
    def AvailableActionsIdsIsNone(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        return o == 0

def Start(builder): builder.StartObject(4)
def SingleAgentEnvStateDataStart(builder):
    """This method is deprecated. Please switch to Start."""
    return Start(builder)
def AddStateId(builder, stateId): builder.PrependUint64Slot(0, stateId, 0)
def SingleAgentEnvStateDataAddStateId(builder, stateId):
    """This method is deprecated. Please switch to AddStateId."""
    return AddStateId(builder, stateId)
def AddIsGameOver(builder, isGameOver): builder.PrependBoolSlot(1, isGameOver, 0)
def SingleAgentEnvStateDataAddIsGameOver(builder, isGameOver):
    """This method is deprecated. Please switch to AddIsGameOver."""
    return AddIsGameOver(builder, isGameOver)
def AddScore(builder, score): builder.PrependFloat32Slot(2, score, 0.0)
def SingleAgentEnvStateDataAddScore(builder, score):
    """This method is deprecated. Please switch to AddScore."""
    return AddScore(builder, score)
def AddAvailableActionsIds(builder, availableActionsIds): builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(availableActionsIds), 0)
def SingleAgentEnvStateDataAddAvailableActionsIds(builder, availableActionsIds):
    """This method is deprecated. Please switch to AddAvailableActionsIds."""
    return AddAvailableActionsIds(builder, availableActionsIds)
def StartAvailableActionsIdsVector(builder, numElems): return builder.StartVector(8, numElems, 8)
def SingleAgentEnvStateDataStartAvailableActionsIdsVector(builder, numElems):
    """This method is deprecated. Please switch to Start."""
    return StartAvailableActionsIdsVector(builder, numElems)
def End(builder): return builder.EndObject()
def SingleAgentEnvStateDataEnd(builder):
    """This method is deprecated. Please switch to End."""
    return End(builder)